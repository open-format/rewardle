@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --animation-speed: 1000ms;
  --animation-speed-fast: 250ms;
  --default-cell-bg-color: theme('colors.white');
  --default-cell-border-color: theme('colors.black');
  --default-cell-text-color: theme('colors.black');
  --absent-cell-bg-color: theme('colors.slate.400');
  --correct-cell-bg-color: theme('colors.green.400');
  --present-cell-bg-color: theme('colors.yellow.400');
  --border-radius-circle: 9999px;
}

.dark {
  --default-cell-bg-color: theme('colors.slate.900');
  --default-cell-border-color: theme('colors.white');
  --default-cell-text-color: theme('colors.white');
  --absent-cell-bg-color: theme('colors.slate.700');
}

.high-contrast {
  --correct-cell-bg-color: theme('colors.orange.400');
  --present-cell-bg-color: theme('colors.cyan.400');
}

.cell-fill-animation {
  animation: onTypeCell linear;
  animation-duration: 0.35s;
}

.cell-reveal {
  animation-duration: 0.35s;
  animation-timing-function: linear;
  animation-fill-mode: backwards;
}

.cell-reveal.absent {
  animation-name: revealAbsentCharCell;
}

.cell-reveal.correct {
  animation-name: revealCorrectCharCell;
}

.cell-reveal.present {
  animation-name: revealPresentCharCell;
}

.cell-reveal > .letter-container {
  animation: offsetLetterFlip 0.35s linear;
  animation-fill-mode: backwards;
}

svg.cursor-pointer {
  transition: all var(--animation-speed-fast);
}

svg.cursor-pointer:hover {
  transform: scale(1.2);
}

.jiggle {
  animation: jiggle linear;
  animation-duration: var(--animation-speed-fast);
}

.navbar {
  margin-bottom: 2%;
}

.navbar-content {
  display: flex;
  height: 3rem;
  align-items: center;
  justify-content: space-between;
}

.right-icons {
  display: flex;
}

@keyframes revealAbsentCharCell {
  0% {
    transform: rotateX(0deg);
    background-color: var(--default-cell-bg-color);
    border-color: var(--default-cell-border-color);
    color: var(--default-cell-text-color);
  }
  50% {
    background-color: var(--default-cell-bg-color);
    border-color: var(--default-cell-border-color);
    color: var(--default-cell-text-color);
  }
  50.1% {
    background-color: var(--absent-cell-bg-color);
    border-color: var(--absent-cell-bg-color);
  }
  100% {
    transform: rotateX(180deg);
  }
}

@keyframes revealCorrectCharCell {
  0% {
    transform: rotateX(0deg);
    background-color: var(--default-cell-bg-color);
    border-color: var(--default-cell-border-color);
    color: var(--default-cell-text-color);
  }
  50% {
    background-color: var(--default-cell-bg-color);
    border-color: var(--default-cell-border-color);
    color: var(--default-cell-text-color);
  }
  50.1% {
    background-color: var(--correct-cell-bg-color);
    border-color: var(--correct-cell-bg-color);
  }
  100% {
    transform: rotateX(180deg);
  }
}

@keyframes revealPresentCharCell {
  0% {
    transform: rotateX(0deg);
    background-color: var(--default-cell-bg-color);
    border-color: var(--default-cell-border-color);
    color: var(--default-cell-text-color);
  }
  50% {
    background-color: var(--default-cell-bg-color);
    border-color: var(--default-cell-border-color);
    color: var(--default-cell-text-color);
  }
  50.1% {
    background-color: var(--present-cell-bg-color);
    border-color: var(--present-cell-bg-color);
  }
  100% {
    transform: rotateX(180deg);
  }
}

/* Additional animation on the child div to avoid letters turning upside down/snapping back to upright visual glitch */
@keyframes offsetLetterFlip {
  0% {
    transform: rotateX(0deg);
  }
  100% {
    transform: rotateX(180deg);
  }
}

@keyframes onTypeCell {
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(1.1);
  }

  100% {
    transform: scale(1);
  }
}

.shadowed {
  text-shadow: 1px 1px 1px #000000;
}

@keyframes jiggle {
  0% {
    transform: translate(0, 0);
  }
  25% {
    transform: translate(-0.5rem, 0);
  }
  50% {
    transform: translate(0.5rem, 0);
  }
  75% {
    transform: translate(-0.5rem, 0);
  }
  100% {
    transform: translate(0, 0);
  }
}

/* Date picker */

.react-datepicker {
  @apply h-72;
}

.react-datepicker__input-container input {
  @apply form-input block w-full rounded border border-gray-300 bg-white text-base shadow-sm md:text-sm;
}

.react-datepicker-popper {
  @apply z-40 w-72 rounded border-2 border-gray-200 bg-white px-3 py-2 text-sm shadow;
}

.react-datepicker-left {
  @apply absolute left-0 right-auto top-11 transform-none !important;
}

.react-datepicker-right {
  @apply absolute right-0 left-auto top-11 transform-none !important;
}

.react-datepicker__portal {
  @apply absolute top-12 right-0 z-10 w-72 transform-none rounded border-2 border-gray-200 bg-white px-3 py-2 text-sm shadow;
}

.react-datepicker__month-container {
  @apply flex flex-col;
}

.react-datepicker__month {
  @apply flex flex-col;
}

.react-datepicker__current-month {
  @apply ml-2.5 text-lg font-semibold text-gray-800 dark:text-gray-100;
}

.react-datepicker__week {
  @apply flex justify-around;
}

.react-datepicker__day-names {
  @apply flex justify-around text-center text-xs font-medium text-gray-400 dark:text-gray-500;
}

.react-datepicker__day-name {
  @apply flex h-8 w-8 items-center justify-center rounded-full py-1;
}

.react-datepicker__navigation {
  @apply absolute top-2;
}

.react-datepicker__navigation--previous {
  @apply right-12 flex h-8 w-8 items-center justify-center rounded transition hover:bg-gray-200;
}

.react-datepicker__navigation--next {
  @apply right-4 flex h-8 w-8 items-center justify-center rounded transition hover:bg-gray-200;
}

.react-datepicker__day {
  @apply mb-1 flex h-8 w-8 cursor-pointer items-center justify-center rounded py-1 text-sm leading-loose text-gray-700 transition dark:text-gray-200;
}

.react-datepicker__day--disabled {
  @apply cursor-not-allowed opacity-40 hover:bg-transparent;
}

.react-datepicker__day--outside-month {
  @apply text-gray-300 dark:text-gray-600;
}

.react-datepicker__day--in-range {
  @apply bg-gray-200;
}

.react-datepicker__day--in-selecting-range {
  @apply bg-indigo-200;
}

.react-datepicker__day--selecting-range-start {
  @apply border-2 border-indigo-600 bg-white;
}

.react-datepicker__day--selecting-range-end {
  @apply border-2 border-indigo-600 bg-white;
}

.react-datepicker__day--selected {
  @apply bg-indigo-600 text-white dark:text-white;
}

.react-datepicker__day--range-start {
  @apply bg-indigo-600 text-white hover:bg-white hover:text-gray-700;
}

.react-datepicker__day--range-end {
  @apply bg-indigo-600 text-white hover:bg-white hover:text-gray-700;
}

/* Section styles */
#profile,
#achievements,
#leaderboard,
#welcome {
  max-width: 65ch;
}
section.main {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: 10px;
}

/* Individual items styles */
.user-data,
.achievement,
.actions {
  background-color: rgba(0, 0, 0, 0.8);
  border: var(--border-width) solid var(--border-color);
  border-radius: var(--border-radius);
  padding: 10px;
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: flex-start;
  gap: 20px;
  flex-wrap: wrap;
}
.user-data,
.achievement {
  margin-bottom: 1.5em;
}
/* User Data Section Layout */
.user-data {
  gap: 20px; /* Space between columns */
  width: 100%;
  padding: 1rem;
  width: 100%;
  font-weight: 300;
}

/* Avatar Column */
#user-avatar {
  width: 128px; /* or your preferred width */
  flex-grow: 0; /* Prevents the avatar from growing */
  flex-shrink: 0; /* Prevents the avatar from shrinking */
}

/* Name and Email Column */
.user-data-details {
  display: flex;
  flex-direction: column;
  justify-content: space-around; /* Distributes space evenly */
  flex-grow: 1; /* Allows this column to grow as needed */
}
.user-data-details figcaption {
  font-size: 2em;
  font-weight: 100;
}
/* Wallet and Scores Column */
.user-data-wallet-scores {
  display: flex;
  flex-direction: column;
  justify-content: space-around; /* Distributes space evenly */
  flex-grow: 1; /* Allows this column to grow as needed */
}
#user-tokens {
  color: var(--primary-color);
}
/* Specific Styles for Name, Email, Wallet, and Scores */
/* Add any specific styling for these elements as needed */

#user-avatar {
  width: 128px;
}
article h3 {
  color: var(--primary-color);
}
/* Payload and badges styles  */

/* Achievement Layout */
.achievement {
  display: flex;
  width: 100%;
  align-items: stretch; /* Ensures items align in height */
  gap: 20px; /* Space between elements */
  border: var(--border-width) solid var(--border-color);
  border-radius: var(--border-radius);
  margin-bottom: 1.5em;
  background-color: rgba(0, 0, 0, 0.8);
  padding: 0;
}

/* Badge Column */
.badges {
  flex-grow: 0; /* Prevents the badge column from growing */
  flex-shrink: 0; /* Prevents the badge column from shrinking */
  align-items: center;
  display: flex;
  flex-direction: column;
  justify-content: center;
}

.badges img {
  width: 256px; /* Adjust the size of the badge as needed */
  height: auto;
  margin: 1em;
}
/* Text Content Column */
.achievement-content {
  margin: 1em;
  display: flex;
  width: 10%;
  flex-direction: column;
  flex-grow: 1; /* Allows this column to grow and take available space */
  justify-content: space-around; /* Distributes space evenly */
}

/* Title, Description, Status, and Payload */
.achievement h3,
.achievement p,
.achievement .payload {
  margin-bottom: 10px; /* Space between elements */
}

/* Actions List */
.actions {
  order: 2; /* Positions actions after the main content */
  width: 100%; /* Full width of the container */
  display: flex;
  margin: 1em;
}
.actions h4 {
}
.action-title {
  color: var(--primary-color);
  font-weight: 700;
}
.actions ul {
  padding-left: 20px;
}

.actions li {
  list-style-type: disc;
}

/* Updated Leaderboard Styles */
#leaderboard {
  width: 100%;
}

#leaderboard h2 {
  margin-bottom: 10px;
}

#leaderboard h3 {
  text-align: left;
  margin-bottom: 20px;
}

/* Leaderboard Table Styling */
#leaderboard table {
  width: 100%;
  border-collapse: collapse;
  margin: 0 auto;
  background-color: rgba(0, 0, 0, 0.8);
}

#leaderboard th,
#leaderboard td {
  text-align: center;
  padding: 10px;
}

/* Leaderboard Table Row and Cell Styling */
#leaderboard td {
  text-align: center;
  padding: 10px;
  vertical-align: middle; /* Vertically centers content in each cell */
}
#leaderboard td.leaderboard-position {
  font-size: 2em;
  font-weight: 100;
}
#leaderboard th {
  background-color: var(--primary-color);
  color: var(--background-color);
  border-bottom: var(--border-width) solid var(--border-color);
  vertical-align: middle; /* Vertically centers content in header cells */
}

#leaderboard tr {
  border-bottom: var(--border-width) solid var(--border-color); /* Bottom border for each row */
}
#leaderboard tr.leaderboard-you {
  background-color: var(--primary-color);
  color: var(--background-color);
  border: var(--border-width) solid var(--border-color);
}
#leaderboard .position-column {
  width: 10%;
}

#leaderboard .avatar-column {
  width: 50px;
}

#leaderboard img {
  width: 100%;
  height: auto;
  border-radius: 50%;
  box-shadow: 0 0 5px var(--primary-color);
}

/* Footer styles */
footer {
  width: 100%;
  max-width: 1200px;
  margin: 1em 0;
  text-align: right;
  font-size: 0.8em;
  font-weight: 100;
}

/* Responsive adjustments */
@media screen and (max-width: 768px) {
  .user-data,
  .achievement,
  .actions {
    flex-direction: column;
  }

  .badges img {
    width: 128px; /* Adjust the size of the badge as needed */
    height: auto;
  }
  .achievement-content {
    width: 90%;
  }
  #profile {
    width: 90%;
  }
  .user-data {
    display: block;
    text-align: center;
  }
  .actions {
    width: 88%;
  }
  .user-data figure,
  .user-data div,
  .user-data p,
  .user-data ul {
    margin: 1em;
  }
}

/* Welcome Styles */
.welcome__list {
}

.welcome__item {
  border: var(--border-width) solid var(--border-color);
  border-radius: var(--border-radius);
  margin: 1rem 0;
  padding: 1rem;
}

.welcome__description p {
  margin-bottom: 1rem;
}

/* Quests */
/* Style for the entire quests section */
.quests {
  /* Styles for the quests section */
}

/* Style for the title of the quests section */
.quests__title {
  /* Styles for the title */
}

/* Style for the list of quests */
.quests__list {
  /* Styles for the quest list */
  list-style: none;
  padding: 0;
}

/* Style for each quest item in the list */
.quests__item {
  /* Styles for each quest item */
  margin-bottom: 1em;
}

/* Style for each quest article */
.quest {
  /* Styles for each quest article */
  border: var(--border-width) solid var(--border-color);
  border-radius: var(--border-radius);
  padding: 1em;
  margin-bottom: 1em;
}

.quest__image {
  height: 64px;
  width: 64px;
  border-radius: var(--border-radius-circle);
}

.quest__details {
  display: flex;
}
/* Style for quest ID */
.quest__id {
  /* Styles for quest ID */
  font-weight: bold;
}

/* Style for quest description */
.quest__description {
  /* Styles for quest description */
}

/* Style for quest requirements section */
.quest__requirements {
  /* Styles for requirements section */
  margin-top: 1em;
}

/* Style for requirements title */
.quest__requirements-title {
  /* Styles for requirements title */
  font-weight: bold;
}

/* Style for requirements list */
.quest__requirements-list {
  /* Styles for requirements list */
  list-style: none;
  padding: 0;
}

/* Style for each requirement in the list */
.quest__requirement {
  /* Styles for each requirement */
}

.nav__active {
  color: pink;
}
